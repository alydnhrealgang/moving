// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteAssetReader is a Reader for the DeleteAsset structure.
type DeleteAssetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAssetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAssetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAssetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAssetOK creates a DeleteAssetOK with default headers values
func NewDeleteAssetOK() *DeleteAssetOK {
	return &DeleteAssetOK{}
}

/*
DeleteAssetOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAssetOK struct {
}

// IsSuccess returns true when this delete asset o k response has a 2xx status code
func (o *DeleteAssetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete asset o k response has a 3xx status code
func (o *DeleteAssetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete asset o k response has a 4xx status code
func (o *DeleteAssetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete asset o k response has a 5xx status code
func (o *DeleteAssetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete asset o k response a status code equal to that given
func (o *DeleteAssetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete asset o k response
func (o *DeleteAssetOK) Code() int {
	return 200
}

func (o *DeleteAssetOK) Error() string {
	return fmt.Sprintf("[DELETE /assets/{path}/{name}][%d] deleteAssetOK ", 200)
}

func (o *DeleteAssetOK) String() string {
	return fmt.Sprintf("[DELETE /assets/{path}/{name}][%d] deleteAssetOK ", 200)
}

func (o *DeleteAssetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAssetBadRequest creates a DeleteAssetBadRequest with default headers values
func NewDeleteAssetBadRequest() *DeleteAssetBadRequest {
	return &DeleteAssetBadRequest{}
}

/*
DeleteAssetBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type DeleteAssetBadRequest struct {
	Payload string
}

// IsSuccess returns true when this delete asset bad request response has a 2xx status code
func (o *DeleteAssetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete asset bad request response has a 3xx status code
func (o *DeleteAssetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete asset bad request response has a 4xx status code
func (o *DeleteAssetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete asset bad request response has a 5xx status code
func (o *DeleteAssetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete asset bad request response a status code equal to that given
func (o *DeleteAssetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete asset bad request response
func (o *DeleteAssetBadRequest) Code() int {
	return 400
}

func (o *DeleteAssetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /assets/{path}/{name}][%d] deleteAssetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAssetBadRequest) String() string {
	return fmt.Sprintf("[DELETE /assets/{path}/{name}][%d] deleteAssetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAssetBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeleteAssetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
