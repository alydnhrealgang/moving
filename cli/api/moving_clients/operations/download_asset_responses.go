// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DownloadAssetReader is a Reader for the DownloadAsset structure.
type DownloadAssetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DownloadAssetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDownloadAssetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDownloadAssetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDownloadAssetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDownloadAssetOK creates a DownloadAssetOK with default headers values
func NewDownloadAssetOK() *DownloadAssetOK {
	return &DownloadAssetOK{}
}

/*
DownloadAssetOK describes a response with status code 200, with default header values.

OK
*/
type DownloadAssetOK struct {
}

// IsSuccess returns true when this download asset o k response has a 2xx status code
func (o *DownloadAssetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this download asset o k response has a 3xx status code
func (o *DownloadAssetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download asset o k response has a 4xx status code
func (o *DownloadAssetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this download asset o k response has a 5xx status code
func (o *DownloadAssetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this download asset o k response a status code equal to that given
func (o *DownloadAssetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the download asset o k response
func (o *DownloadAssetOK) Code() int {
	return 200
}

func (o *DownloadAssetOK) Error() string {
	return fmt.Sprintf("[GET /assets/download/{path}/{name}][%d] downloadAssetOK ", 200)
}

func (o *DownloadAssetOK) String() string {
	return fmt.Sprintf("[GET /assets/download/{path}/{name}][%d] downloadAssetOK ", 200)
}

func (o *DownloadAssetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDownloadAssetBadRequest creates a DownloadAssetBadRequest with default headers values
func NewDownloadAssetBadRequest() *DownloadAssetBadRequest {
	return &DownloadAssetBadRequest{}
}

/*
DownloadAssetBadRequest describes a response with status code 400, with default header values.

BadRequest
*/
type DownloadAssetBadRequest struct {
	Payload string
}

// IsSuccess returns true when this download asset bad request response has a 2xx status code
func (o *DownloadAssetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download asset bad request response has a 3xx status code
func (o *DownloadAssetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download asset bad request response has a 4xx status code
func (o *DownloadAssetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this download asset bad request response has a 5xx status code
func (o *DownloadAssetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this download asset bad request response a status code equal to that given
func (o *DownloadAssetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the download asset bad request response
func (o *DownloadAssetBadRequest) Code() int {
	return 400
}

func (o *DownloadAssetBadRequest) Error() string {
	return fmt.Sprintf("[GET /assets/download/{path}/{name}][%d] downloadAssetBadRequest  %+v", 400, o.Payload)
}

func (o *DownloadAssetBadRequest) String() string {
	return fmt.Sprintf("[GET /assets/download/{path}/{name}][%d] downloadAssetBadRequest  %+v", 400, o.Payload)
}

func (o *DownloadAssetBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DownloadAssetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDownloadAssetNotFound creates a DownloadAssetNotFound with default headers values
func NewDownloadAssetNotFound() *DownloadAssetNotFound {
	return &DownloadAssetNotFound{}
}

/*
DownloadAssetNotFound describes a response with status code 404, with default header values.

NotFound
*/
type DownloadAssetNotFound struct {
}

// IsSuccess returns true when this download asset not found response has a 2xx status code
func (o *DownloadAssetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this download asset not found response has a 3xx status code
func (o *DownloadAssetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this download asset not found response has a 4xx status code
func (o *DownloadAssetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this download asset not found response has a 5xx status code
func (o *DownloadAssetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this download asset not found response a status code equal to that given
func (o *DownloadAssetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the download asset not found response
func (o *DownloadAssetNotFound) Code() int {
	return 404
}

func (o *DownloadAssetNotFound) Error() string {
	return fmt.Sprintf("[GET /assets/download/{path}/{name}][%d] downloadAssetNotFound ", 404)
}

func (o *DownloadAssetNotFound) String() string {
	return fmt.Sprintf("[GET /assets/download/{path}/{name}][%d] downloadAssetNotFound ", 404)
}

func (o *DownloadAssetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
