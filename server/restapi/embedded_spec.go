// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MovingApi",
    "title": "Moving",
    "version": "1.0.0"
  },
  "host": "192.168.31.49:8443",
  "basePath": "/v1",
  "paths": {
    "/assets": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Upload an asset",
        "operationId": "UploadAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "contentType",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetDataResponse"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/assets/download/{path}/{name}": {
      "get": {
        "consumes": [
          "application/json",
          "image/jpeg",
          "image/png",
          "image/gif",
          "text/plain",
          "application/octet-stream"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Download an asset",
        "operationId": "DownloadAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/assets/{path}/{name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve the metadata of an asset",
        "operationId": "GetAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "如果为支持通配*，则获取所有path下的内容",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetData"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete an asset",
        "operationId": "DeleteAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/item/{code}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a item or its children",
        "operationId": "GetItemByCode",
        "parameters": [
          {
            "type": "string",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "childrenOnly",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemData"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/items": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Save a item",
        "operationId": "SaveItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ItemData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/items/move": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Move items to another box",
        "operationId": "MoveItems",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "codes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "to": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "codesNotFound": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "moved": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/items/query": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Query items",
        "operationId": "QueryItems",
        "parameters": [
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "tagName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "keyword",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "startIndex",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "fetchSize",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemData"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/suggest/{name}/{text}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve a list of texts by given name and text",
        "operationId": "SuggestTexts",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "text",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AssetData": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "AssetDataResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "default": 0
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/AssetData"
        },
        "messages": {
          "type": "string"
        }
      }
    },
    "ItemData": {
      "type": "object",
      "properties": {
        "boxCode": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "count": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "props": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serverID": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "MovingApi",
    "title": "Moving",
    "version": "1.0.0"
  },
  "host": "192.168.31.49:8443",
  "basePath": "/v1",
  "paths": {
    "/assets": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Upload an asset",
        "operationId": "UploadAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "contentType",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetDataResponse"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/assets/download/{path}/{name}": {
      "get": {
        "consumes": [
          "application/json",
          "application/octet-stream",
          "image/gif",
          "image/jpeg",
          "image/png",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Download an asset",
        "operationId": "DownloadAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/assets/{path}/{name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve the metadata of an asset",
        "operationId": "GetAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "如果为支持通配*，则获取所有path下的内容",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetData"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete an asset",
        "operationId": "DeleteAsset",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/item/{code}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get a item or its children",
        "operationId": "GetItemByCode",
        "parameters": [
          {
            "type": "string",
            "name": "code",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "childrenOnly",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemData"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "NotFound",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/items": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Save a item",
        "operationId": "SaveItem",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ItemData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/items/move": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Move items to another box",
        "operationId": "MoveItems",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "codes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "to": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "codesNotFound": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "moved": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ItemData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/items/query": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Query items",
        "operationId": "QueryItems",
        "parameters": [
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "tagName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "keyword",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "startIndex",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "name": "fetchSize",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemData"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/suggest/{name}/{text}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Retrieve a list of texts by given name and text",
        "operationId": "SuggestTexts",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "text",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AssetData": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      }
    },
    "AssetDataResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "default": 0
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/AssetData"
        },
        "messages": {
          "type": "string"
        }
      }
    },
    "ItemData": {
      "type": "object",
      "properties": {
        "boxCode": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "count": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "props": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serverID": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    }
  }
}`))
}
