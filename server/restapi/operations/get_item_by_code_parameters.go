// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewGetItemByCodeParams creates a new GetItemByCodeParams object
//
// There are no default values defined in the spec.
func NewGetItemByCodeParams() GetItemByCodeParams {

	return GetItemByCodeParams{}
}

// GetItemByCodeParams contains all the bound params for the get item by code operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetItemByCode
type GetItemByCodeParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: query
	*/
	ChildrenOnly bool
	/*
	  Required: true
	  In: path
	*/
	Code string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetItemByCodeParams() beforehand.
func (o *GetItemByCodeParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qChildrenOnly, qhkChildrenOnly, _ := qs.GetOK("childrenOnly")
	if err := o.bindChildrenOnly(qChildrenOnly, qhkChildrenOnly, route.Formats); err != nil {
		res = append(res, err)
	}

	rCode, rhkCode, _ := route.Params.GetOK("code")
	if err := o.bindCode(rCode, rhkCode, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindChildrenOnly binds and validates parameter ChildrenOnly from query.
func (o *GetItemByCodeParams) bindChildrenOnly(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("childrenOnly", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false

	if err := validate.RequiredString("childrenOnly", "query", raw); err != nil {
		return err
	}

	value, err := swag.ConvertBool(raw)
	if err != nil {
		return errors.InvalidType("childrenOnly", "query", "bool", raw)
	}
	o.ChildrenOnly = value

	return nil
}

// bindCode binds and validates parameter Code from path.
func (o *GetItemByCodeParams) bindCode(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.Code = raw

	return nil
}
