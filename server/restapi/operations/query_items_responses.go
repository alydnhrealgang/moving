// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/alydnhrealgang/moving/server/models"
)

// QueryItemsOKCode is the HTTP code returned for type QueryItemsOK
const QueryItemsOKCode int = 200

/*
QueryItemsOK OK

swagger:response queryItemsOK
*/
type QueryItemsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ItemData `json:"body,omitempty"`
}

// NewQueryItemsOK creates QueryItemsOK with default headers values
func NewQueryItemsOK() *QueryItemsOK {

	return &QueryItemsOK{}
}

// WithPayload adds the payload to the query items o k response
func (o *QueryItemsOK) WithPayload(payload []*models.ItemData) *QueryItemsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query items o k response
func (o *QueryItemsOK) SetPayload(payload []*models.ItemData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryItemsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ItemData, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// QueryItemsBadRequestCode is the HTTP code returned for type QueryItemsBadRequest
const QueryItemsBadRequestCode int = 400

/*
QueryItemsBadRequest BadRequest

swagger:response queryItemsBadRequest
*/
type QueryItemsBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewQueryItemsBadRequest creates QueryItemsBadRequest with default headers values
func NewQueryItemsBadRequest() *QueryItemsBadRequest {

	return &QueryItemsBadRequest{}
}

// WithPayload adds the payload to the query items bad request response
func (o *QueryItemsBadRequest) WithPayload(payload string) *QueryItemsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the query items bad request response
func (o *QueryItemsBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QueryItemsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
