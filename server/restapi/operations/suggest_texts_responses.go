// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SuggestTextsOKCode is the HTTP code returned for type SuggestTextsOK
const SuggestTextsOKCode int = 200

/*
SuggestTextsOK OK

swagger:response suggestTextsOK
*/
type SuggestTextsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewSuggestTextsOK creates SuggestTextsOK with default headers values
func NewSuggestTextsOK() *SuggestTextsOK {

	return &SuggestTextsOK{}
}

// WithPayload adds the payload to the suggest texts o k response
func (o *SuggestTextsOK) WithPayload(payload []string) *SuggestTextsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the suggest texts o k response
func (o *SuggestTextsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SuggestTextsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// SuggestTextsBadRequestCode is the HTTP code returned for type SuggestTextsBadRequest
const SuggestTextsBadRequestCode int = 400

/*
SuggestTextsBadRequest BadRequest

swagger:response suggestTextsBadRequest
*/
type SuggestTextsBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewSuggestTextsBadRequest creates SuggestTextsBadRequest with default headers values
func NewSuggestTextsBadRequest() *SuggestTextsBadRequest {

	return &SuggestTextsBadRequest{}
}

// WithPayload adds the payload to the suggest texts bad request response
func (o *SuggestTextsBadRequest) WithPayload(payload string) *SuggestTextsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the suggest texts bad request response
func (o *SuggestTextsBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SuggestTextsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
