// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/alydnhrealgang/moving/server/models"
)

// UploadAssetOKCode is the HTTP code returned for type UploadAssetOK
const UploadAssetOKCode int = 200

/*
UploadAssetOK OK

swagger:response uploadAssetOK
*/
type UploadAssetOK struct {

	/*
	  In: Body
	*/
	Payload *models.AssetDataResponse `json:"body,omitempty"`
}

// NewUploadAssetOK creates UploadAssetOK with default headers values
func NewUploadAssetOK() *UploadAssetOK {

	return &UploadAssetOK{}
}

// WithPayload adds the payload to the upload asset o k response
func (o *UploadAssetOK) WithPayload(payload *models.AssetDataResponse) *UploadAssetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload asset o k response
func (o *UploadAssetOK) SetPayload(payload *models.AssetDataResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadAssetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadAssetBadRequestCode is the HTTP code returned for type UploadAssetBadRequest
const UploadAssetBadRequestCode int = 400

/*
UploadAssetBadRequest BadRequest

swagger:response uploadAssetBadRequest
*/
type UploadAssetBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUploadAssetBadRequest creates UploadAssetBadRequest with default headers values
func NewUploadAssetBadRequest() *UploadAssetBadRequest {

	return &UploadAssetBadRequest{}
}

// WithPayload adds the payload to the upload asset bad request response
func (o *UploadAssetBadRequest) WithPayload(payload string) *UploadAssetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload asset bad request response
func (o *UploadAssetBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadAssetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
